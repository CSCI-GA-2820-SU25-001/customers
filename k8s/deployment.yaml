apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer
  labels:
    app: customer
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0  
  selector:
    matchLabels:
      app: customer
  template:
    metadata:
      labels:
        app: customer
    spec:
      restartPolicy: Always
      containers:
      - name: customer
        image: cluster-registry:5000/customer:1.0
        # image: customer
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
          - name: DATABASE_URI
            valueFrom:
              secretKeyRef:
                name: postgres-creds
                key: database-uri
        resources:
          limits:
            cpu: "0.25"
            memory: "64Mi"
          requests:
            cpu: "0.10"
            memory: "32Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health  
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10